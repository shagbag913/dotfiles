#!/usr/bin/env bash

# function to only notify if notifications are enabled
tg_notify() {
    [[ -z $NOTIFY ]] && return 0
    tg_bot -m "$1" -p "$NOTIFY"
}

while [[ $# -gt 1 ]]; do
    case $1 in
        -n|--notify)
            shift
            NOTIFY="$1"
            ;;
        -d|--device)
            shift
            DEVICE="$1"
            ;;
        -j|--jobs)
            shift
            JOBS="$1"
            ;;
        -m|--message)
            shift
            MESSAGE="$1"
    esac
shift
done

[[ -z $DEVICE ]] && DEVICE="sailfish"
[[ -z $JOBS ]] && JOBS="30"

# old build.log file
rm /tmp/build.log

if [[ -z $MESSAGE ]]; then
    tg_notify "Starting BootleggersROM build for $DEVICE"
else
    tg_notify "Starting BootleggersROM build for $DEVICE
Notes:
$MESSAGE"
fi

. build/envsetup.sh
lunch bootleg_$DEVICE-userdebug
OLDTIME=$(elapsed)
make bacon -j$JOBS |& tee /tmp/build.log
if [[ ${PIPESTATUS[0]} = 141 ]]; then
    tg_notify "${DEVICE^} build aborted!
Elapsed time: $(elapsed $OLDTIME)"
elif [[ ${PIPESTATUS[0]} != 0 ]]; then
    for i in "FAILED" "ninja: error"; do
        if [[ $(cat /tmp/build.log | sed -ne '/'"$i"'/,$p') != "" ]]; then
            ERROR=$(cat /tmp/build.log | sed -ne '/'"$i"'/,$p')
        fi
    done
    DDLINK=$(deldog "$ERROR")
    if [[ -z $ERROR ]]; then
        tg_notify "BootleggersROM build for $DEVICE failed.
Elapsed time: $(elapsed $OLDTIME)"
    else
        tg_notify "BootleggersROM build for $DEVICE failed.
Error: $DDLINK
Elapsed time: $(elapsed $OLDTIME)"
    fi
    exit 1
else
    tg_notify "BootleggersROM build for $DEVICE successful!
Elapsed time: $(elapsed $OLDTIME)" 
    OLDTIME=$(elapsed)
    (
        cd out/target/product/sailfish
        cp $(ls BootleggersROM*.zip | sort | tail -n 1) $HOME/gdrive/Public/Bootleggers
    )
    if grive -p $HOME/gdrive; then
        tg_notify "BootleggersROM build for sailfish uploaded!
Elapsed time: $(elapsed $OLDTIME)."
    fi
fi
