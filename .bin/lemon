#!/usr/bin/env sh
#
# My lemonbar setup.
# IMPORTANT:  This configuration is only compatible with
#             a lemonbar fork with xft font compatibility.
#

# Kill all background jobs on exit
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

BAR_HEIGHT_RATIO=04

# Find BSPWM gap ratio
BSPWM_GAP=$(awk '/window_gap/{print $4}' $HOME/.config/bspwm/bspwmrc)
if [ $(wc -l <<< $BSPWM_GAP) -gt 1 ]; then BSPWM_GAP=0$BSPWM_GAP; fi

MONITOR_WIDTH=$(xrandr --query | awk -F '[ x+]' '/\<connected\>/{print $4}')
MONITOR_HEIGHT=$(xrandr --query | awk -F '[ x+]' '/\<connected\>/{print $5}')
BAR_WIDTH=$(echo "$MONITOR_WIDTH - $((BSPWM_GAP * 2))" | bc -l | sed 's/\..*//')
BAR_HEIGHT=$(echo "$MONITOR_HEIGHT * .$BAR_HEIGHT_RATIO" | bc -l | sed 's/\..*//')

FIFO=/tmp/lemonfifo
[ -e $FIFO ] && rm $FIFO
mkfifo $FIFO

is_charging() {
    grep -q Charging /sys/class/power_supply/BAT0/status
    return $?
}

bar_date() {
    echo "bar_date$(date '+%I:%M %p' | sed 's/^0//')"
}

bar_battery() {
    local charge=$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null)
    [ -n "$charge" ] || { BATTERY_PERCENTAGE=""; return; }
    local charge_array='    '
    local glyph

    if [ "$charge" -lt 15 ]; then
        glyph=1
    elif [ "$charge" -lt 40 ]; then
        glyph=2
    elif [ "$charge" -lt 70 ]; then
        glyph=3
    elif [ "$charge" -lt 90 ]; then
        glyph=4
    else
        glyph=5
    fi

    set -- $charge_array

    if is_charging; then
        if [ $CHARGING_INDEX = 5 ] || [ -z "$CHARGING_INDEX" ]; then
            CHARGING_INDEX=$glyph
        else
            CHARGING_INDEX=$((CHARGING_INDEX + 1))
        fi

        eval glyph="\${$CHARGING_INDEX}"
    else
        eval glyph="\${$glyph}"
    fi

    echo "bar_battery$glyph  $charge%"
}

bar_bspwm_windows() {
    local windows
    local index=0
    local IFS=":"
    for i in $(bspc wm --get-status); do
        case $i in
            o*)
                windows="$windows    $index    "
            ;;
            O*|F*)
                windows="$windows%{B#222e59}%{F#d7fdff}    $index    %{B#141b35}%{F#ffffff}"
            ;;
        esac
        index=$((index+1))
    done
    echo "bar_bspwm_windows$windows"
}

bar_memory_usage() {
    echo "bar_memory_usage  $(free | awk -F' ' '/Mem/{printf "%3.0f\n",$3/$2*100}' | tr -d ' ')%"
}

while :; do bar_date; sleep 10; done > $FIFO &
while :; do bar_memory_usage; sleep 5; done > $FIFO &
while :; do bar_battery; sleep 1; done > $FIFO &
while :; do bar_bspwm_windows; sleep .2; done > $FIFO &

while read -r line; do
    case $line in
        bar_memory_usage*)
            bar_memory_usage=${line:16}
            ;;
        bar_date*)
            bar_date=${line:8}
            ;;
        bar_battery*)
            bar_battery=${line:11}
            ;;
        bar_bspwm_windows*)
            bar_bspwm_windows=${line:17}
            ;;
    esac
    echo "%{l}${bar_bspwm_windows}%{c}${bar_date}%{r}${bar_memory_usage}    |    ${bar_battery}    "
done < $FIFO | lemonbar \
            -o -1 \
            -f '-misc-font awesome 5 free solid-black-r-normal--0-0-0-0-p-0-iso10646-1' \
            -o 1 \
            -f 'Google Sans:style=Bold:size=11' \
            -g "$BAR_WIDTH"x"$BAR_HEIGHT"+"$BSPWM_GAP"+"$((BSPWM_GAP / 2))" \
            -B '#141b35'
