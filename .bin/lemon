#!/usr/bin/env dash
#
# My lemonbar setup.
# IMPORTANT:  This configuration is only compatible with
#             a lemonbar fork with xft font compatibility.
#
BAR_HEIGHT_RATIO=04

# Find BSPWM gap ratio
BSPWM_GAP=$(cat $HOME/.config/bspwm/bspwmrc | awk '/window_gap/{print $4}')
if [ $(echo $BSPWM_GAP | wc -l) -gt 1 ]; then BSPWM_GAP=0$BSPWM_GAP; fi

MONITOR_WIDTH=$(xrandr --query | awk -F '[ x+]' '/\<connected\>/{print $4}')
MONITOR_HEIGHT=$(xrandr --query | awk -F '[ x+]' '/\<connected\>/{print $5}')
BAR_WIDTH=$(echo "$MONITOR_WIDTH - $((BSPWM_GAP * 2))" | bc -l | sed 's/\..*//')
BAR_HEIGHT=$(echo "$MONITOR_HEIGHT * .$BAR_HEIGHT_RATIO" | bc -l | sed 's/\..*//')

CHARGING_INDEX=1

is_charging() {
    cat /sys/class/power_supply/BAT0/status | grep -q Charging
    return $?
}

bar_date() {
    TIME=$(date '+%I:%M %p' | sed 's/^0//')
}

bar_battery() {
    local charge=$(cat /sys/class/power_supply/BAT0/capacity)
    [ -n "$charge" ] || { BATTERY_PERCENTAGE=""; return; }
    local charge_array='    '
    local glyph

    if [ "$charge" -lt 15 ]; then
        glyph=1
    elif [ "$charge" -lt 40 ]; then
        glyph=2
    elif [ "$charge" -lt 70 ]; then
        glyph=3
    elif [ "$charge" -lt 90 ]; then
        glyph=4
    else
        glyph=5
    fi

    set -- $charge_array

    if is_charging; then
        if [ $CHARGING_INDEX = 5 ] || [ -z "$CHARGING_INDEX" ]; then
            CHARGING_INDEX=$glyph
        else
            CHARGING_INDEX=$((CHARGING_INDEX + 1))
        fi

        eval glyph="\${$CHARGING_INDEX}"
    else
        eval glyph="\${$glyph}"
    fi

    BATTERY_PERCENTAGE="  $glyph  $charge%  "
}

bar_bspwm_windows() {
    local windows
    local index=0
    local IFS=":"
    for i in $(bspc wm --get-status); do
        case $i in
            o*)
                windows="$windows    $index    "
                index=$((index+1))
                continue
            ;;
            O*|F*)
                windows="$windows%{B#222e59}%{F#d7fdff}    $index    %{B#141b35}%{F#ffffff}"
            ;;
        esac
        index=$((index+1))
    done
    WINDOW_LIST="$windows"
}

bar_memory_usage() {
    MEMORY_USAGE="  $(free | awk -F' ' '/Mem/{printf "%3.0f\n",$3/$2*100}' | tr -d ' ')%  "
}

while :; do
    UPTIME=$(cat /proc/uptime | awk -F'.' '{print $1}')

    if [ "$RAN" = true ]; then REFRESH=false; fi
    if [ "$((UPTIME % 2))" -ne 0 ]; then
        RAN=false
        REFRESH=false
    elif [ "$RAN" != true ]; then
        REFRESH=true
        RAN=true
    fi

    [ $REFRESH = true ] || [ -z "$TIME" ] && bar_date
    [ $REFRESH = true ] || [ -z "$BATTERY_PERCENTAGE" ] && bar_battery
    [ $REFRESH = true ] || [ -z "$MEMORY_USAGE" ] && bar_memory_usage

    bar_bspwm_windows

    BAR="%{l}$WINDOW_LIST%{c}$TIME%{r}$MEMORY_USAGE"
    [ -n "$BATTERY_PERCENTAGE" ] && BAR="$BAR | $BATTERY_PERCENTAGE"
    echo "  $BAR  "
done | lemonbar \
            -o -1 \
            -f '-misc-font awesome 5 free solid-black-r-normal--0-0-0-0-p-0-iso10646-1' \
            -o 1 \
            -f 'Noto Sans Medium-11' \
            -g "$BAR_WIDTH"x"$BAR_HEIGHT"+"$BSPWM_GAP"+"$((BSPWM_GAP / 2))" \
            -B '#141b35'
