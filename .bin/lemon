#!/usr/bin/env zsh
#
# My lemonbar setup.
# IMPORTANT:  This configuration is only compatible with
#             a lemonbar fork with xft font compatibility.
#
BAR_HEIGHT_RATIO=04


# Find BSPWM gap ratio
BSPWM_GAP=$(cat $HOME/.config/bspwm/bspwmrc | awk '/window_gap/{print $4}')
if [[ $(echo $BSPWM_GAP | wc -l) -gt 1 ]]; then BSPWM_GAP=0$BSPWM_GAP; fi

MONITOR_WIDTH=$(xrandr --query |awk -F '[ x+]' '/\<connected\>/{print $4}')
MONITOR_HEIGHT=$(xrandr --query |awk -F '[ x+]' '/\<connected\>/{print $5}')
BAR_WIDTH=$(echo "$MONITOR_WIDTH - $((BSPWM_GAP * 2))" | bc -l | sed 's/\..*//')
BAR_HEIGHT=$(echo "$MONITOR_HEIGHT * .$BAR_HEIGHT_RATIO" | bc -l | sed 's/\..*//')

CHARGING_INDEX=1

has_battery() {
    return $(ls /sys/class/power_supply/BAT0/status &>/dev/null; echo $?)
}

is_charging() {
    return $(cat /sys/class/power_supply/BAT0/status | grep Charging &>/dev/null; echo $?)
}

bar_date() {
    TIME=$(date '+%I:%M %p' | sed 's/^0//')
}

bar_battery() {
    has_battery || { BATTERY_PERCENTAGE=""; return; }
    local charge_array=('' '' '' '' '')
    local glyph
    local charge=$(cat /sys/class/power_supply/BAT0/capacity)

    if [[ $charge < 15 ]]; then
        glyph=1
    elif [[ $charge < 40 ]]; then
        glyph=2
    elif [[ $charge < 70 ]]; then
        glyph=3
    elif [[ $charge < 90 ]]; then
        glyph=4
    else
        glyph=5
    fi

    if is_charging; then
        if [[ $CHARGING_INDEX = 5 || -z "$CHARGING_INDEX" ]]; then
            CHARGING_INDEX=$glyph
        else
            CHARGING_INDEX=$((CHARGING_INDEX + 1))
        fi

        glyph=${charge_array[$CHARGING_INDEX]}
    else
        glyph=${charge_array[glyph]}
    fi

    BATTERY_PERCENTAGE="  $glyph  $charge%  "
}

bar_bspwm_windows() {
    local rn_window
    local windows
    local index
    local wm_status=$(bspc wm --get-status)
    for i in {2..11}; do
        index=$((i-1))
        rn_window=$(awk -F':' -v i="$i" '{print $i}' <<< $wm_status)
        if [[ $rn_window =~ ^O || $rn_window =~ ^F ]]; then
            windows="$windows%{B#222e59}%{F#d7fdff}    $index    %{B#141b35}%{F#ffffff}"
        fi
        if [[ $rn_window =~ ^o ]]; then
            windows="$windows    $index    "
        fi
    done
    WINDOW_LIST="$windows"
}

bar_memory_usage() {
    MEMORY_USAGE="  $(free | awk -F' ' '/Mem/{printf "%3.0f\n",$3/$2*100}' | tr -d ' ')%  "
}

while :; do
    UPTIME=$(cat /proc/uptime | awk -F'.' '{print $1}')
    [[ $RAN = true ]] && REFRESH=false
    if [[ $((UPTIME % 2)) != 0 ]]; then
        RAN=false
        REFRESH=false
    elif [[ $RAN != true ]]; then
        REFRESH=true
        RAN=true
    fi
    [[ $REFRESH = true || -z "$TIME" ]] && bar_date
    [[ $REFRESH = true || -z "$BATTERY_PERCENTAGE" ]] && bar_battery
    [[ $REFRESH = true || -z "$MEMORY_USAGE" ]] && bar_memory_usage
    bar_bspwm_windows
    BAR="%{l}$WINDOW_LIST%{c}$TIME%{r}$MEMORY_USAGE"
    [[ -n "$BATTERY_PERCENTAGE" ]] && BAR="$BAR | $BATTERY_PERCENTAGE"
    echo "  $BAR  "
done | lemonbar \
            -o -1 \
            -f '-misc-font awesome 5 free solid-black-r-normal--0-0-0-0-p-0-iso10646-1' \
            -o 1 \
            -f 'Noto Sans Medium-11' \
            -g "$BAR_WIDTH"x"$BAR_HEIGHT"+"$BSPWM_GAP"+"$((BSPWM_GAP / 2))" \
            -B '#141b35'
