#!/usr/bin/env dash
#
# My lemonbar setup.
# IMPORTANT:  This configuration is only compatible with
#             a lemonbar fork with xft font compatibility.
#

UTILS=$HOME/.bin/dotfile_utils

# Check if the wrapper for this is compiled
if [ ! -f "$UTILS" ]; then
    cd $HOME/.bin
    gcc -lm -lasound -o dotfile_utils dotfile_utils.c
    cd -
fi

# Vertical size in percentage of the bar
BAR_HEIGHT_RATIO=04

# Find bspwm gap ratio
BSPWM_GAP=$(awk '/window_gap/{print $4}' $HOME/.config/bspwm/bspwmrc)
if [ $(echo $BSPWM | wc -l) -gt 1 ]; then BSPWM_GAP=0$BSPWM_GAP; fi

MONITOR_WIDTH=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]\+' | sed -n 1p)
MONITOR_HEIGHT=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]\+' | sed -n 2p)
BAR_WIDTH=$(echo "$MONITOR_WIDTH - $((BSPWM_GAP * 2))" | bc -l | sed 's/\..*//')
BAR_HEIGHT=$(echo "$MONITOR_HEIGHT * .$BAR_HEIGHT_RATIO" | bc -l | sed 's/\..*//')

FIFO=/tmp/lemonfifo
[ -e $FIFO ] && rm $FIFO
mkfifo $FIFO

seperate() {
    local items
    for i in "$@"; do
        [ -z "$i" ] && continue
        items="$items    |    $i"
    done
    echo "$items" | sed 's/ \+|//'
}

while :; do $UTILS --time; sleep 10; done > $FIFO &
while :; do $UTILS --memory used --percentage-total --glyph --prefix; sleep 10; done > $FIFO &
while :; do $UTILS --bspwm-status; sleep .15; done > $FIFO &
while :; do $UTILS --network-status; sleep 10; done > $FIFO &
while :; do $UTILS --brightness-slider; sleep 1; done > $FIFO &
while :; do $UTILS --charge-glyph; sleep 4; done > $FIFO &
while :; do $UTILS --volume-slider; sleep 1; done > $FIFO &

while read -r line; do
    case $line in
        memory*)
            MEMORY_USAGE=$(echo "$line" | tail -c+7)
            ;;
        time*)
            TIME=$(echo "$line" | tail -c+5)
            ;;
        charge-glyph*)
            BATTERY=$(echo "$line" | tail -c+13)
            ;;
        bspwm-status*)
            BSPWM_STATUS=$(echo "$line" | tail -c+13)
            ;;
        network-status*)
            NETWORK_STATUS=$(echo "$line" | tail -c+15)
            ;;
        brightness-slider*)
            INTEL_BRIGHTNESS=$(echo "$line" | tail -c+18)
            ;;
        volume-slider*)
            VOLUME=$(echo "$line" | tail -c+14)
            ;;
    esac
    echo "%{l}$(seperate "$TIME")%{c}$BSPWM_STATUS%{r}$(seperate "$VOLUME" "$INTEL_BRIGHTNESS" "$NETWORK_STATUS" "$MEMORY_USAGE" "$BATTERY")    "
done < $FIFO | lemonbar \
            -f 'Font Awesome 5 Free Solid:style=Solid' \
            -f 'SF Pro Display:style=Bold:size=10' \
            -g "$BAR_WIDTH"x"$BAR_HEIGHT"+"$BSPWM_GAP"+"$((BSPWM_GAP / 2))" \
            -B '#141b35' \
            -p | dash
