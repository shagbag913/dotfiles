#!/usr/bin/env bash
#
# Copyright (C) 2018 shagbag913
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Script to control brightness and show a notification
# MUST HAVE 'notify-send.sh' AND 'light' available!
#
# Temp file to test whether the script is running or not
SCRIPT_TEMP="/tmp/brightness_lock"
if [[ -f ${SCRIPT_TEMP} ]]; then
  exit 0
fi
touch ${SCRIPT_TEMP}

FADE=true
BRIGHTNESS_STEPS="15"
MINIMUM_BRIGHTNESS="5"

CURRENT_BRIGHTNESS=$( light )
CURRENT_BRIGHTNESS=$( printf "%.0f\n" ${CURRENT_BRIGHTNESS} )

set_brightness() {
  if [[ ${2} = "+" ]]; then
    LIGHT_CMD="-A"
  elif [[ ${2} = "-" ]]; then
    LIGHT_CMD="-U"
  fi
  if [[ ${FADE} = true ]]; then
    for steps in $(seq ${1}); do
      light -S $(( CURRENT_BRIGHTNESS ${2} 1 ))
      sleep .004
      CURRENT_BRIGHTNESS=$( light )
      CURRENT_BRIGHTNESS=$(printf "%.0f\n" ${CURRENT_BRIGHTNESS})
    done
  else
    light ${LIGHT_CMD} ${1}
  fi
}

if [[ ${1} = "-inc" ]]; then
  set_brightness ${BRIGHTNESS_STEPS} +
elif [[ ${1} = "-dec" ]] && [[ ${CURRENT_BRIGHTNESS} -gt $(( MINIMUM_BRIGHTNESS + BRIGHTNESS_STEPS )) ]]; then
  set_brightness ${BRIGHTNESS_STEPS} -
elif [[ -n ${1} ]]; then
  if [[ ${CURRENT_BRIGHTNESS} -gt ${MINIMUM_BRIGHTNESS} ]]; then
    set_brightness $(( CURRENT_BRIGHTNESS - MINIMUM_BRIGHTNESS )) -
  fi
fi


NEW_BRIGHTNESS=$( light )
NEW_BRIGHTNESS=$( printf "%.0f\n" ${NEW_BRIGHTNESS} )

if [[ ${NEW_BRIGHTNESS} = "100" ]]; then
  NEW_BRIGHTNESS="Max"
elif [[ ${NEW_BRIGHTNESS} = ${MINIMUM_BRIGHTNESS} ]]; then
  NEW_BRIGHTNESS="Min"
else
  PERCENT="%"
fi

# determine which icon to use based on the brightness
BRIGHTNESS_RANGE=$(( 100 - MINIMUM_BRIGHTNESS ))
BRIGHTNESS_RANGE=$(( 100 - BRIGHTNESS_RANGE + 100 ))

brightness_range_icon() {
  printf "%.0f\n" $( echo "$BRIGHTNESS_RANGE * ${1}" | bc -l )
}
if [[ ${NEW_BRIGHTNESS} = "Max" ]]; then
  ICON=notification-display-brightness-full
elif [[ ${NEW_BRIGHTNESS} = "Min" ]]; then
  ICON=notification-display-brightness-off
elif [[ ${NEW_BRIGHTNESS} -ge $( brightness_range_icon .5 ) ]]; then
  ICON=notification-display-brightness-medium
elif [[ ${NEW_BRIGHTNESS} -lt $( brightness_range_icon .5 ) ]]; then
  ICON=notification-display-brightness-low
fi

notify-send.sh --icon=${ICON} -t 5000 -R /tmp/brightness_notifyd_id \
    "Brightness: ${NEW_BRIGHTNESS}${PERCENT}"

rm ${SCRIPT_TEMP}
