#!/usr/bin/env bash

# Don't use unicode ~ taken from neofetch (makes script faster)
LC_ALL=C
LANG=C

# Colors
LIGHT_RED='\e[91m'
LIGHT_GREY='\e[37m'
DEFAULT='\e[39m'

TIME=$(date +%l:%M%p | tr -d ' ')

# Calculate system uptime
UPTIME=$(cat /proc/uptime | sed -n 's/ .*//;s/\..*//p')
UPTIME_SEC=$((UPTIME % 60))
UPTIME_MIN=$((UPTIME / 60 % 60))
UPTIME_HOUR=$((UPTIME / 60 / 60 % 24))
UPTIME_DAY=$((UPTIME / 60 / 60 / 24))

if [[ ${UPTIME_DAY} != 0 ]]; then
    UPTIME_TOTAL="${UPTIME_DAY}d "
fi
if [[ ${UPTIME_HOUR} != 0 ]]; then
    UPTIME_TOTAL+="${UPTIME_HOUR}h "
fi
if [[ ${UPTIME_MIN} != 0 ]]; then
    UPTIME_TOTAL+="${UPTIME_MIN}m "
fi
if [[ ${UPTIME_SEC} != 0 ]]; then
    UPTIME_TOTAL+="${UPTIME_SEC}s "
fi

# Distro name
OS=$(cat /etc/os-release | sed -n 's/NAME=//;s/"//gp' | head -n 1)

# Battery capacity
if [[ -d /sys/class/power_supply/BAT0 ]]; then
    BATTERY=$(cat /sys/class/power_supply/BAT0/capacity)
    BATTERY_STATUS=$(cat /sys/class/power_supply/BAT0/status)
fi

# Disk info
DISK_MNT_PNT="/" #TODO: support multiple drives
DISK_USED=$(df -h --output=used ${DISK_MNT_PNT} | tail -n 1 | tr -d ' ')
DISK_SIZE=$(df -h --output=size ${DISK_MNT_PNT} | tail -n 1 | tr -d ' ')
DISK_AVAIL=$(df -h --output=avail ${DISK_MNT_PNT} | tail -n 1 | tr -d ' ')

# Kernel name
KERNEL=$(uname -r)

# CPU
CPU=$(cat /proc/cpuinfo | grep "model name" | sed -n 's/.*: //p' | tail -n 1)

# GPU ~ Experimental
GPU=$(lspci | sed -ne '/VGA/s/.*: //p' | sed -n 's/ (.*//p')
if echo "${GPU}" | grep "Integrated Graphics Controller" &>/dev/null; then
    GPU=$(echo "${GPU}" | sed -n 's/ Integrated Graphics Controller//p')
fi

# Memory
TOTAL_MEMORY=$(($(cat /proc/meminfo | sed -n 's/MemTotal://p' | tr -d 'kB ') / 1024))
AVAILABLE_MEMORY=$(($(cat /proc/meminfo | sed -n 's/MemAvailable://p' | tr -d 'kB ') / 1024))
USED_MEMORY=$((TOTAL_MEMORY - AVAILABLE_MEMORY))

PACKAGES="$(pacman -Qq | wc -l) (pacman)"

print_info() {
    INFO=${1}
    OUTPUT=${2}
    SPACES=$(printf ' %.0s' $(seq $((30 - ${#INFO}))))
    echo -e "${LIGHT_RED}${INFO}:${SPACES}${LIGHT_GREY}${OUTPUT}${DEFAULT}"
}

echo
echo -e "${LIGHT_RED}███████╗██╗  ██╗ █████╗  ██████╗ ██████╗  █████╗  ██████╗  █████╗  ██╗██████╗"
echo "██╔════╝██║  ██║██╔══██╗██╔════╝ ██╔══██╗██╔══██╗██╔════╝ ██╔══██╗███║╚════██╗"
echo "███████╗███████║███████║██║  ███╗██████╔╝███████║██║  ███╗╚██████║╚██║ █████╔╝"
echo "╚════██║██╔══██║██╔══██║██║   ██║██╔══██╗██╔══██║██║   ██║ ╚═══██║ ██║ ╚═══██╗"
echo "███████║██║  ██║██║  ██║╚██████╔╝██████╔╝██║  ██║╚██████╔╝ █████╔╝ ██║██████╔╝"
echo -e "╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ╚════╝  ╚═╝╚═════╝${DEFAULT}"
echo
print_info Time ${TIME}
print_info OS "${OS}"
print_info Kernel ${KERNEL}
print_info CPU "${CPU}"
print_info GPU "${GPU}"
print_info Packages "${PACKAGES}"
print_info "Disk(${DISK_MNT_PNT})" "Used ${DISK_USED} / ${DISK_SIZE}, Available ${DISK_AVAIL}"
if [[ -d /sys/class/power_supply/BAT0 ]]; then
    print_info Battery "${BATTERY}% (${BATTERY_STATUS})"
fi
print_info Uptime "${UPTIME_TOTAL}"
print_info Memory "${USED_MEMORY}MiB / ${TOTAL_MEMORY}MiB"
echo
